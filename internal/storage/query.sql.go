// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.21.0
// source: query.sql

package storage

import (
	"context"
	"database/sql"
	"time"
)

const insertTransaction = `-- name: InsertTransaction :exec
INSERT INTO transaction (ta_postdate, ta_description, ta_debit, ta_credit, ta_balance, ta_classification_text)
VALUES ($1, $2, $3, $4, $5, $6)
ON CONFLICT ON CONSTRAINT unique_transaction DO NOTHING
`

type InsertTransactionParams struct {
	TaPostdate           time.Time       `json:"ta_postdate"`
	TaDescription        string          `json:"ta_description"`
	TaDebit              sql.NullFloat64 `json:"ta_debit"`
	TaCredit             sql.NullFloat64 `json:"ta_credit"`
	TaBalance            float32         `json:"ta_balance"`
	TaClassificationText string          `json:"ta_classification_text"`
}

func (q *Queries) InsertTransaction(ctx context.Context, arg InsertTransactionParams) error {
	_, err := q.db.ExecContext(ctx, insertTransaction,
		arg.TaPostdate,
		arg.TaDescription,
		arg.TaDebit,
		arg.TaCredit,
		arg.TaBalance,
		arg.TaClassificationText,
	)
	return err
}
